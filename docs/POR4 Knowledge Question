TODO:

Step 1 – Knowledge Question (20-50 words) In your own words, describe what a Binary Search Tree (BST) is.
    In addition, describe two important properties of a BST: depth and height. How are they different?
    My answer: A Binary Search Tree (BST) is a structure where each node has up to two children: smaller values go to the left, larger to the right.
    Depth is like counting generations from first ancestor in family tree (the root) down to a node.
    Height counts generations from a node down to its youngest sibling (longest path connecting the node to any leaf node).


Step 2 – Knowledge Question (50-80 words)
    In your own words, describe how an algorithm to find an item in a Binary Search Tree works.
    My answer: In the Binary Search Tree, algorithm begins at the root node and compares the target value to the value of the current node in order to locate the item.
    If it matches, the item is found. If the target is smaller, it searches the left side of the tree (subtree), if larger, it searches the right subtree.
    This process is repeated until the item is found or a null pointer is reached, meaning the item is not in the tree.

Step 3 – Knowledge Question (20-60 words)
    In your own words, describe what a balanced BST is.
    My answer: A balanced BST is when the left and right subtrees of all nodes are equal in height.
    It should grow evenly from both sides like a family tree.
    A Binary Search Tree is considered balanced if the height of the tree is O(Log n), where n is the number of nodes.